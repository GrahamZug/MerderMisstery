
fn main() {
	let head = new Node(1);
	head.next = new Node(2);
	head.next.next = new Node(3);
	print_list(head);

	println_s("removing second node");
	head.next = head.next.next;
	print_list(head);
}

struct Node {
	value: int,
	next: Node,

	fn constructor(value: int) {
		this.value = value;
	}
}

// hack to make a null value since I somehow did not design that into the language
fn make_null(): Node {
	let n = new Node(0);
	return n.next;
}

fn print_list(n: Node) {
	let null = make_null();
	let first = true;

	while n != null {
		if first {
			first = false;
		} else {
			print_s(" -> ");
		}

		print_i(n.value);
		n = n.next;
	}

	println_s("");
}